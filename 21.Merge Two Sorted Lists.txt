/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var mergeTwoLists = function(l1, l2) {
    
    if( l1 === null || l2 === null ){
       return l1 === null ? l2 : l1;
    }
    
    let mergedList = new ListNode();
    let l3 = mergedList;
    
    if( l1.val < l2.val){
            l3.val = l1.val;
            l1 = l1.next;
        } else {
           l3.val = l2.val;
            l2 = l2.next;
        }
    
    while(l1 != null || l2 != null) {
        if( l2 === null || (l1 != null && l1.val < l2.val)){
            l3.next = l1;
            l1 = l1.next;
        } else {
           l3.next = l2;
            l2 = l2.next;
        }
        l3 = l3.next;
    }
    return mergedList;
};